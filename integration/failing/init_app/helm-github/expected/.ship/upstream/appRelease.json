{
  "id": "cZB0VTZLBexn0s53sMzVB0Id3VvSPcCZ",
  "sequence": 6060,
  "channelId": "t_qVrkESBiqOa8ZraseeS38bXy-qgpSe",
  "channelName": "integration replicated.app helm-github",
  "channelIcon": "",
  "semver": "1.0.1-SNAPSHOT",
  "releaseNotes": "",
  "spec": "---\nassets:\n  v1:\n  - helm:\n      dest: charts/values-static-public-source\n      github:\n        repo: replicatedhq/test-charts\n        ref: ff4868c3329dca771f773b36afe0451b773eff3f\n        path: values-static\n        source: public\n  - helm:\n      dest: charts/minio-forked-proxy\n      github:\n        repo: replicatedhq/test-charts\n        ref: 04c90a93df7765f5cd896ca2f95a2801146543b0\n        path: minio-forked\n        proxy: true\n  - github:\n      dest: plain-k8s-no-proxy\n      repo: replicatedhq/test-charts\n      ref: 3427d6997bd150c60caa00ba0298fdfe17e3ed04\n      path: plain-k8s\n      proxy: false\n  - github:\n      dest: postgres-forked-private-source\n      repo: replicatedhq/test-charts\n      ref: eb834c80b4a381d7c99798935ee386107619b2a1\n      path: postgres-forked\n      source: private\nconfig: {}\nlifecycle:\n  v1:\n  - render: {}\n",
  "images": [],
  "githubContents": [
    {
      "repo": "replicatedhq/test-charts",
      "path": "values-static",
      "ref": "ff4868c3329dca771f773b36afe0451b773eff3f",
      "files": [
        {
          "name": ".helmignore",
          "path": "values-static/.helmignore",
          "sha": "",
          "size": 333,
          "data": "IyBQYXR0ZXJucyB0byBpZ25vcmUgd2hlbiBidWlsZGluZyBwYWNrYWdlcy4KIyBUaGlzIHN1cHBvcnRzIHNoZWxsIGdsb2IgbWF0Y2hpbmcsIHJlbGF0aXZlIHBhdGggbWF0Y2hpbmcsIGFuZAojIG5lZ2F0aW9uIChwcmVmaXhlZCB3aXRoICEpLiBPbmx5IG9uZSBwYXR0ZXJuIHBlciBsaW5lLgouRFNfU3RvcmUKIyBDb21tb24gVkNTIGRpcnMKLmdpdC8KLmdpdGlnbm9yZQouYnpyLwouYnpyaWdub3JlCi5oZy8KLmhnaWdub3JlCi5zdm4vCiMgQ29tbW9uIGJhY2t1cCBmaWxlcwoqLnN3cAoqLmJhawoqLnRtcAoqfgojIFZhcmlvdXMgSURFcwoucHJvamVjdAouaWRlYS8KKi50bXByb2oK"
        },
        {
          "name": "Chart.yaml",
          "path": "values-static/Chart.yaml",
          "sha": "",
          "size": 83,
          "data": "YXBpVmVyc2lvbjogdjEKYXBwVmVyc2lvbjogIjEuMCIKZGVzY3JpcHRpb246IEEKbmFtZTogdmFsdWVzLXVwZGF0ZQp2ZXJzaW9uOiAwLjEuMAo="
        },
        {
          "name": "README.md",
          "path": "values-static/README.md",
          "sha": "",
          "size": 6,
          "data": "UmVhZG1l"
        },
        {
          "name": "deployment.yaml",
          "path": "values-static/templates/deployment.yaml",
          "sha": "",
          "size": 879,
          "data": "YXBpVmVyc2lvbjogYXBwcy92MWJldGEyCmtpbmQ6IERlcGxveW1lbnQKbWV0YWRhdGE6CiAgbmFtZTogZGVwbG95bWVudAogIGxhYmVsczoKICAgIGFwcDogbXktYXBwCiAgICBjaGFydDoge3sgLkNoYXJ0Lk5hbWUgfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CnNwZWM6CiAgcmVwbGljYXM6IHt7IC5WYWx1ZXMucmVwbGljYUNvdW50IH19CiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAgYXBwOiBteS1hcHAKICAgICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBhcHA6IG15LWFwcAogICAgICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIHNwZWM6CiAgICAgIGNvbnRhaW5lcnM6CiAgICAgICAgLSBuYW1lOiB7eyAuQ2hhcnQuTmFtZSB9fQogICAgICAgICAgaW1hZ2U6ICJ7eyAuVmFsdWVzLmltYWdlLnJlcG9zaXRvcnkgfX06e3sgLlZhbHVlcy5pbWFnZS50YWcgfX0iCiAgICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgICAgcG9ydHM6CiAgICAgICAgICAgIC0gbmFtZTogaHR0cAogICAgICAgICAgICAgIGNvbnRhaW5lclBvcnQ6IDgwCiAgICAgICAgICAgICAgcHJvdG9jb2w6IFRDUAogICAgICAgICAgbGl2ZW5lc3NQcm9iZToKICAgICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgICBwYXRoOiAvCiAgICAgICAgICAgICAgcG9ydDogaHR0cAogICAgICAgICAgcmVhZGluZXNzUHJvYmU6CiAgICAgICAgICAgIGh0dHBHZXQ6CiAgICAgICAgICAgICAgcGF0aDogLwogICAgICAgICAgICAgIHBvcnQ6IGh0dHAK"
        },
        {
          "name": "values.yaml",
          "path": "values-static/values.yaml",
          "sha": "",
          "size": 58,
          "data": "cmVwbGljYUNvdW50OiAxCmltYWdlOgogIHJlcG9zaXRvcnk6IG5naW54CiAgdGFnOiBzdGFibGUKCg=="
        }
      ]
    },
    {
      "repo": "replicatedhq/test-charts",
      "path": "minio-forked",
      "ref": "04c90a93df7765f5cd896ca2f95a2801146543b0",
      "files": [
        {
          "name": ".helmignore",
          "path": "minio-forked/.helmignore",
          "sha": "",
          "size": 333,
          "data": "IyBQYXR0ZXJucyB0byBpZ25vcmUgd2hlbiBidWlsZGluZyBwYWNrYWdlcy4KIyBUaGlzIHN1cHBvcnRzIHNoZWxsIGdsb2IgbWF0Y2hpbmcsIHJlbGF0aXZlIHBhdGggbWF0Y2hpbmcsIGFuZAojIG5lZ2F0aW9uIChwcmVmaXhlZCB3aXRoICEpLiBPbmx5IG9uZSBwYXR0ZXJuIHBlciBsaW5lLgouRFNfU3RvcmUKIyBDb21tb24gVkNTIGRpcnMKLmdpdC8KLmdpdGlnbm9yZQouYnpyLwouYnpyaWdub3JlCi5oZy8KLmhnaWdub3JlCi5zdm4vCiMgQ29tbW9uIGJhY2t1cCBmaWxlcwoqLnN3cAoqLmJhawoqLnRtcAoqfgojIFZhcmlvdXMgSURFcwoucHJvamVjdAouaWRlYS8KKi50bXByb2oK"
        },
        {
          "name": "Chart.yaml",
          "path": "minio-forked/Chart.yaml",
          "sha": "",
          "size": 531,
          "data": "YXBpVmVyc2lvbjogdjEKZGVzY3JpcHRpb246IE1pbmlvIGlzIGEgaGlnaCBwZXJmb3JtYW5jZSBkaXN0cmlidXRlZCBvYmplY3Qgc3RvcmFnZSBzZXJ2ZXIsIGRlc2lnbmVkIGZvciBsYXJnZS1zY2FsZSBwcml2YXRlIGNsb3VkIGluZnJhc3RydWN0dXJlLgpuYW1lOiBtaW5pbwp2ZXJzaW9uOiAyLjIuMAphcHBWZXJzaW9uOiBSRUxFQVNFLjIwMTgtMTItMDZUMDEtMjctNDNaCmtleXdvcmRzOgotIHN0b3JhZ2UKLSBvYmplY3Qtc3RvcmFnZQotIFMzCmhvbWU6IGh0dHBzOi8vbWluaW8uaW8KaWNvbjogaHR0cHM6Ly93d3cubWluaW8uaW8vaW1nL2xvZ29fMTYweDE2MC5wbmcKc291cmNlczoKLSBodHRwczovL2dpdGh1Yi5jb20vbWluaW8vbWluaW8KbWFpbnRhaW5lcnM6Ci0gbmFtZTogQWNhbGVwaAogIGVtYWlsOiBoZWxsb0BhY2FsZS5waAotIG5hbWU6IE1pbmlvCiAgZW1haWw6IGRldkBtaW5pby5pbwotIG5hbWU6IG5pdGlzaHQKICBlbWFpbDogbml0aXNoQG1pbi5pbwotIG5hbWU6IHdsYW4wCiAgZW1haWw6IHNpZEBtaW4uaW8K"
        },
        {
          "name": "OWNERS",
          "path": "minio-forked/OWNERS",
          "sha": "",
          "size": 58,
          "data": "YXBwcm92ZXJzOgotIHdsYW4wCi0gbml0aXNodApyZXZpZXdlcnM6Ci0gd2xhbjAKLSBuaXRpc2h0Cg=="
        },
        {
          "name": "README.md",
          "path": "minio-forked/README.md",
          "sha": "",
          "size": 17822,
          "data": ""
        },
        {
          "name": "NOTES.txt",
          "path": "minio-forked/templates/NOTES.txt",
          "sha": "",
          "size": 2351,
          "data": "e3stIGlmIGVxIC5WYWx1ZXMuc2VydmljZS50eXBlICJDbHVzdGVySVAiICJOb2RlUG9ydCIgfX0KTWluaW8gY2FuIGJlIGFjY2Vzc2VkIHZpYSBwb3J0IHt7IC5WYWx1ZXMuc2VydmljZS5wb3J0IH19IG9uIHRoZSBmb2xsb3dpbmcgRE5TIG5hbWUgZnJvbSB3aXRoaW4geW91ciBjbHVzdGVyOgp7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0tc3ZjLnt7IC5SZWxlYXNlLk5hbWVzcGFjZSB9fS5zdmMuY2x1c3Rlci5sb2NhbAoKVG8gYWNjZXNzIE1pbmlvIGZyb20gbG9jYWxob3N0LCBydW4gdGhlIGJlbG93IGNvbW1hbmRzOgoKICAxLiBleHBvcnQgUE9EX05BTUU9JChrdWJlY3RsIGdldCBwb2RzIC0tbmFtZXNwYWNlIHt7IC5SZWxlYXNlLk5hbWVzcGFjZSB9fSAtbCAicmVsZWFzZT17eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0iIC1vIGpzb25wYXRoPSJ7Lml0ZW1zWzBdLm1ldGFkYXRhLm5hbWV9IikKCiAgMi4ga3ViZWN0bCBwb3J0LWZvcndhcmQgJFBPRF9OQU1FIDkwMDAgLS1uYW1lc3BhY2Uge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19CgpSZWFkIG1vcmUgYWJvdXQgcG9ydCBmb3J3YXJkaW5nIGhlcmU6IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9rdWJlY3RsL2t1YmVjdGxfcG9ydC1mb3J3YXJkLwoKWW91IGNhbiBub3cgYWNjZXNzIE1pbmlvIHNlcnZlciBvbiBodHRwOi8vbG9jYWxob3N0OjkwMDAuIEZvbGxvdyB0aGUgYmVsb3cgc3RlcHMgdG8gY29ubmVjdCB0byBNaW5pbyBzZXJ2ZXIgd2l0aCBtYyBjbGllbnQ6CgogIDEuIERvd25sb2FkIHRoZSBNaW5pbyBtYyBjbGllbnQgLSBodHRwczovL2RvY3MubWluaW8uaW8vZG9jcy9taW5pby1jbGllbnQtcXVpY2tzdGFydC1ndWlkZQoKICAyLiBtYyBjb25maWcgaG9zdCBhZGQge3sgdGVtcGxhdGUgIm1pbmlvLmZ1bGxuYW1lIiAuIH19LWxvY2FsIGh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCB7eyAuVmFsdWVzLmFjY2Vzc0tleSB9fSB7eyAuVmFsdWVzLnNlY3JldEtleSB9fSBTM3Y0CgogIDMuIG1jIGxzIHt7IHRlbXBsYXRlICJtaW5pby5mdWxsbmFtZSIgLiB9fS1sb2NhbAoKQWx0ZXJuYXRlbHksIHlvdSBjYW4gdXNlIHlvdXIgYnJvd3NlciBvciB0aGUgTWluaW8gU0RLIHRvIGFjY2VzcyB0aGUgc2VydmVyIC0gaHR0cHM6Ly9kb2NzLm1pbmlvLmlvL2NhdGVnb3JpZXMvMTcKe3stIGVuZCB9fQp7ey0gaWYgZXEgLlZhbHVlcy5zZXJ2aWNlLnR5cGUgIkxvYWRCYWxhbmNlciIgfX0KTWluaW8gY2FuIGJlIGFjY2Vzc2VkIHZpYSBwb3J0IHt7IC5WYWx1ZXMuc2VydmljZS5wb3J0IH19IG9uIGFuIGV4dGVybmFsIElQIGFkZHJlc3MuIEdldCB0aGUgc2VydmljZSBleHRlcm5hbCBJUCBhZGRyZXNzIGJ5OgprdWJlY3RsIGdldCBzdmMgLS1uYW1lc3BhY2Uge3sgLlJlbGVhc2UuTmFtZXNwYWNlIH19IC1sIGFwcD17eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0KCk5vdGUgdGhhdCB0aGUgcHVibGljIElQIG1heSB0YWtlIGEgY291cGxlIG9mIG1pbnV0ZXMgdG8gYmUgYXZhaWxhYmxlLgoKWW91IGNhbiBub3cgYWNjZXNzIE1pbmlvIHNlcnZlciBvbiBodHRwOi8vPEV4dGVybmFsLUlQPjo5MDAwLiBGb2xsb3cgdGhlIGJlbG93IHN0ZXBzIHRvIGNvbm5lY3QgdG8gTWluaW8gc2VydmVyIHdpdGggbWMgY2xpZW50OgoKICAxLiBEb3dubG9hZCB0aGUgTWluaW8gbWMgY2xpZW50IC0gaHR0cHM6Ly9kb2NzLm1pbmlvLmlvL2RvY3MvbWluaW8tY2xpZW50LXF1aWNrc3RhcnQtZ3VpZGUKCiAgMi4gbWMgY29uZmlnIGhvc3QgYWRkIHt7IHRlbXBsYXRlICJtaW5pby5mdWxsbmFtZSIgLiB9fS1sb2NhbCBodHRwOi8vPEV4dGVybmFsLUlQPjp7eyAuVmFsdWVzLnNlcnZpY2UucG9ydCB9fSB7eyAuVmFsdWVzLmFjY2Vzc0tleSB9fSB7eyAuVmFsdWVzLnNlY3JldEtleSB9fSBTM3Y0CgogIDMuIG1jIGxzIHt7IHRlbXBsYXRlICJtaW5pby5mdWxsbmFtZSIgLiB9fS1sb2NhbAoKQWx0ZXJuYXRlbHksIHlvdSBjYW4gdXNlIHlvdXIgYnJvd3NlciBvciB0aGUgTWluaW8gU0RLIHRvIGFjY2VzcyB0aGUgc2VydmVyIC0gaHR0cHM6Ly9kb2NzLm1pbmlvLmlvL2NhdGVnb3JpZXMvMTcKe3stIGVuZCB9fQoKe3sgaWYgYW5kICguVmFsdWVzLm5ldHdvcmtQb2xpY3kuZW5hYmxlZCkgKG5vdCAuVmFsdWVzLm5ldHdvcmtQb2xpY3kuYWxsb3dFeHRlcm5hbCkgfX0KTm90ZTogU2luY2UgTmV0d29ya1BvbGljeSBpcyBlbmFibGVkLCBvbmx5IHBvZHMgd2l0aCBsYWJlbAp7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0tY2xpZW50PXRydWUiCndpbGwgYmUgYWJsZSB0byBjb25uZWN0IHRvIHRoaXMgbWluaW8gY2x1c3Rlci4Ke3stIGVuZCB9fQo="
        },
        {
          "name": "_helper_create_bucket.txt",
          "path": "minio-forked/templates/_helper_create_bucket.txt",
          "sha": "",
          "size": 2271,
          "data": "IyEvYmluL3NoCnNldCAtZSA7ICMgSGF2ZSBzY3JpcHQgZXhpdCBpbiB0aGUgZXZlbnQgb2YgYSBmYWlsZWQgY29tbWFuZC4KCiMgY29ubmVjdFRvTWluaW8KIyBVc2UgYSBjaGVjay1zbGVlcC1jaGVjayBsb29wIHRvIHdhaXQgZm9yIE1pbmlvIHNlcnZpY2UgdG8gYmUgYXZhaWxhYmxlCmNvbm5lY3RUb01pbmlvKCkgewogIEFUVEVNUFRTPTAgOyBMSU1JVD0yOSA7ICMgQWxsb3cgMzAgYXR0ZW1wdHMKICBzZXQgLWUgOyAjIGZhaWwgaWYgd2UgY2FuJ3QgcmVhZCB0aGUga2V5cy4KICBBQ0NFU1M9JChjYXQgL2NvbmZpZy9hY2Nlc3NrZXkpIDsgU0VDUkVUPSQoY2F0IC9jb25maWcvc2VjcmV0a2V5KSA7CiAgc2V0ICtlIDsgIyBUaGUgY29ubmVjdGlvbnMgdG8gbWluaW8gYXJlIGFsbG93ZWQgdG8gZmFpbC4KICBlY2hvICJDb25uZWN0aW5nIHRvIE1pbmlvIHNlcnZlcjogaHR0cDovLyRNSU5JT19FTkRQT0lOVDokTUlOSU9fUE9SVCIgOwogIE1DX0NPTU1BTkQ9Im1jIGNvbmZpZyBob3N0IGFkZCBteW1pbmlvIGh0dHA6Ly8kTUlOSU9fRU5EUE9JTlQ6JE1JTklPX1BPUlQgJEFDQ0VTUyAkU0VDUkVUIiA7CiAgJE1DX0NPTU1BTkQgOwogIFNUQVRVUz0kPyA7CiAgdW50aWwgWyAkU1RBVFVTID0gMCBdCiAgZG8KICAgIEFUVEVNUFRTPWBleHByICRBVFRFTVBUUyArIDFgIDsKICAgIGVjaG8gXCJGYWlsZWQgYXR0ZW1wdHM6ICRBVFRFTVBUU1wiIDsKICAgIGlmIFsgJEFUVEVNUFRTIC1ndCAkTElNSVQgXTsgdGhlbgogICAgICBleGl0IDEgOwogICAgZmkgOwogICAgc2xlZXAgMiA7ICMgMSBzZWNvbmQgaW50ZXJ2YWxzIGJldHdlZW4gYXR0ZW1wdHMKICAgICRNQ19DT01NQU5EIDsKICAgIFNUQVRVUz0kPyA7CiAgZG9uZSA7CiAgc2V0IC1lIDsgIyByZXNldCBgZWAgYXMgYWN0aXZlCiAgcmV0dXJuIDAKfQoKIyBjaGVja0J1Y2tldEV4aXN0cyAoJGJ1Y2tldCkKIyBDaGVjayBpZiB0aGUgYnVja2V0IGV4aXN0cywgYnkgdXNpbmcgdGhlIGV4aXQgY29kZSBvZiBgbWMgbHNgCmNoZWNrQnVja2V0RXhpc3RzKCkgewogIEJVQ0tFVD0kMQogIENNRD0kKC91c3IvYmluL21jIGxzIG15bWluaW8vJEJVQ0tFVCA+IC9kZXYvbnVsbCAyPiYxKQogIHJldHVybiAkPwp9CgojIGNyZWF0ZUJ1Y2tldCAoJGJ1Y2tldCwgJHBvbGljeSwgJHB1cmdlKQojIEVuc3VyZSBidWNrZXQgZXhpc3RzLCBwdXJnaW5nIGlmIGFza2VkIHRvCmNyZWF0ZUJ1Y2tldCgpIHsKICBCVUNLRVQ9JDEKICBQT0xJQ1k9JDIKICBQVVJHRT0kMwoKICAjIFB1cmdlIHRoZSBidWNrZXQsIGlmIHNldCAmIGV4aXN0cwogICMgU2luY2UgUFVSR0UgaXMgdXNlciBpbnB1dCwgY2hlY2sgZXhwbGljaXRseSBmb3IgYHRydWVgCiAgaWYgWyAkUFVSR0UgPSB0cnVlIF07IHRoZW4KICAgIGlmIGNoZWNrQnVja2V0RXhpc3RzICRCVUNLRVQgOyB0aGVuCiAgICAgIGVjaG8gIlB1cmdpbmcgYnVja2V0ICckQlVDS0VUJy4iCiAgICAgIHNldCArZSA7ICMgZG9uJ3QgZXhpdCBpZiB0aGlzIGZhaWxzCiAgICAgIC91c3IvYmluL21jIHJtIC1yIC0tZm9yY2UgbXltaW5pby8kQlVDS0VUCiAgICAgIHNldCAtZSA7ICMgcmVzZXQgYGVgIGFzIGFjdGl2ZQogICAgZWxzZQogICAgICBlY2hvICJCdWNrZXQgJyRCVUNLRVQnIGRvZXMgbm90IGV4aXN0LCBza2lwcGluZyBwdXJnZS4iCiAgICBmaQogIGZpCgogICMgQ3JlYXRlIHRoZSBidWNrZXQgaWYgaXQgZG9lcyBub3QgZXhpc3QKICBpZiAhIGNoZWNrQnVja2V0RXhpc3RzICRCVUNLRVQgOyB0aGVuCiAgICBlY2hvICJDcmVhdGluZyBidWNrZXQgJyRCVUNLRVQnIgogICAgL3Vzci9iaW4vbWMgbWIgbXltaW5pby8kQlVDS0VUCiAgZWxzZQogICAgZWNobyAiQnVja2V0ICckQlVDS0VUJyBhbHJlYWR5IGV4aXN0cy4iCiAgZmkKCiAgIyBBdCB0aGlzIHBvaW50LCB0aGUgYnVja2V0IHNob3VsZCBleGlzdCwgc2tpcCBjaGVja2luZyBmb3IgZXhpc3RlbmNlCiAgIyBTZXQgcG9saWN5IG9uIHRoZSBidWNrZXQKICBlY2hvICJTZXR0aW5nIHBvbGljeSBvZiBidWNrZXQgJyRCVUNLRVQnIHRvICckUE9MSUNZJy4iCiAgL3Vzci9iaW4vbWMgcG9saWN5ICRQT0xJQ1kgbXltaW5pby8kQlVDS0VUCn0KCiMgVHJ5IGNvbm5lY3RpbmcgdG8gTWluaW8gaW5zdGFuY2UKY29ubmVjdFRvTWluaW8KIyBDcmVhdGUgdGhlIGJ1Y2tldApjcmVhdGVCdWNrZXQge3sgLlZhbHVlcy5kZWZhdWx0QnVja2V0Lm5hbWUgfX0ge3sgLlZhbHVlcy5kZWZhdWx0QnVja2V0LnBvbGljeSB9fSB7eyAuVmFsdWVzLmRlZmF1bHRCdWNrZXQucHVyZ2UgfX0K"
        },
        {
          "name": "_helpers.tpl",
          "path": "minio-forked/templates/_helpers.tpl",
          "sha": "",
          "size": 1394,
          "data": "e3svKiB2aW06IHNldCBmaWxldHlwZT1tdXN0YWNoZTogKi99fQp7ey8qCkV4cGFuZCB0aGUgbmFtZSBvZiB0aGUgY2hhcnQuCiovfX0Ke3stIGRlZmluZSAibWluaW8ubmFtZSIgLX19Cnt7LSBkZWZhdWx0IC5DaGFydC5OYW1lIC5WYWx1ZXMubmFtZU92ZXJyaWRlIHwgdHJ1bmMgNjMgfCB0cmltU3VmZml4ICItIiAtfX0Ke3stIGVuZCAtfX0KCnt7LyoKQ3JlYXRlIGEgZGVmYXVsdCBmdWxseSBxdWFsaWZpZWQgYXBwIG5hbWUuCldlIHRydW5jYXRlIGF0IDYzIGNoYXJzIGJlY2F1c2Ugc29tZSBLdWJlcm5ldGVzIG5hbWUgZmllbGRzIGFyZSBsaW1pdGVkIHRvIHRoaXMgKGJ5IHRoZSBETlMgbmFtaW5nIHNwZWMpLgpJZiByZWxlYXNlIG5hbWUgY29udGFpbnMgY2hhcnQgbmFtZSBpdCB3aWxsIGJlIHVzZWQgYXMgYSBmdWxsIG5hbWUuCiovfX0Ke3stIGRlZmluZSAibWluaW8uZnVsbG5hbWUiIC19fQp7ey0gaWYgLlZhbHVlcy5mdWxsbmFtZU92ZXJyaWRlIC19fQp7ey0gLlZhbHVlcy5mdWxsbmFtZU92ZXJyaWRlIHwgdHJ1bmMgNjMgfCB0cmltU3VmZml4ICItIiAtfX0Ke3stIGVsc2UgLX19Cnt7LSAkbmFtZSA6PSBkZWZhdWx0IC5DaGFydC5OYW1lIC5WYWx1ZXMubmFtZU92ZXJyaWRlIC19fQp7ey0gaWYgY29udGFpbnMgJG5hbWUgLlJlbGVhc2UuTmFtZSAtfX0Ke3stIC5SZWxlYXNlLk5hbWUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIC19fQp7ey0gZWxzZSAtfX0Ke3stIHByaW50ZiAiJXMiIC5SZWxlYXNlLk5hbWUgfCB0cnVuYyA2MyB8IHRyaW1TdWZmaXggIi0iIC19fQp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQoKe3svKgpDcmVhdGUgY2hhcnQgbmFtZSBhbmQgdmVyc2lvbiBhcyB1c2VkIGJ5IHRoZSBjaGFydCBsYWJlbC4KKi99fQp7ey0gZGVmaW5lICJtaW5pby5jaGFydCIgLX19Cnt7LSBwcmludGYgIiVzLSVzIiAuQ2hhcnQuTmFtZSAuQ2hhcnQuVmVyc2lvbiB8IHJlcGxhY2UgIisiICJfIiB8IHRydW5jIDYzIHwgdHJpbVN1ZmZpeCAiLSIgLX19Cnt7LSBlbmQgLX19Cgp7ey8qClJldHVybiB0aGUgYXBwcm9wcmlhdGUgYXBpVmVyc2lvbiBmb3IgbmV0d29ya3BvbGljeS4KKi99fQp7ey0gZGVmaW5lICJtaW5pby5uZXR3b3JrUG9saWN5LmFwaVZlcnNpb24iIC19fQp7ey0gaWYgc2VtdmVyQ29tcGFyZSAiPj0xLjQtMCwgPDEuNy0wIiAuQ2FwYWJpbGl0aWVzLkt1YmVWZXJzaW9uLkdpdFZlcnNpb24gLX19Cnt7LSBwcmludCAiZXh0ZW5zaW9ucy92MWJldGExIiAtfX0Ke3stIGVsc2UgaWYgc2VtdmVyQ29tcGFyZSAiXjEuNy0wIiAuQ2FwYWJpbGl0aWVzLkt1YmVWZXJzaW9uLkdpdFZlcnNpb24gLX19Cnt7LSBwcmludCAibmV0d29ya2luZy5rOHMuaW8vdjEiIC19fQp7ey0gZW5kIC19fQp7ey0gZW5kIC19fQo="
        },
        {
          "name": "configmap.yaml",
          "path": "minio-forked/templates/configmap.yaml",
          "sha": "",
          "size": 6427,
          "data": ""
        },
        {
          "name": "deployment.yaml",
          "path": "minio-forked/templates/deployment.yaml",
          "sha": "",
          "size": 7314,
          "data": ""
        },
        {
          "name": "ingress.yaml",
          "path": "minio-forked/templates/ingress.yaml",
          "sha": "",
          "size": 997,
          "data": "e3stIGlmIC5WYWx1ZXMuaW5ncmVzcy5lbmFibGVkIC19fQp7ey0gJGZ1bGxOYW1lIDo9IGluY2x1ZGUgIm1pbmlvLmZ1bGxuYW1lIiAuIC19fQp7ey0gJHNlcnZpY2VQb3J0IDo9IC5WYWx1ZXMuc2VydmljZS5wb3J0IC19fQp7ey0gJGluZ3Jlc3NQYXRoIDo9IC5WYWx1ZXMuaW5ncmVzcy5wYXRoIC19fQphcGlWZXJzaW9uOiBleHRlbnNpb25zL3YxYmV0YTEKa2luZDogSW5ncmVzcwptZXRhZGF0YToKICBuYW1lOiB7eyAkZnVsbE5hbWUgfX0KICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJtaW5pby5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgIm1pbmlvLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQp7ey0gd2l0aCAuVmFsdWVzLmluZ3Jlc3MuYW5ub3RhdGlvbnMgfX0KICBhbm5vdGF0aW9uczoKe3sgdG9ZYW1sIC4gfCBpbmRlbnQgNCB9fQp7ey0gZW5kIH19CnNwZWM6Cnt7LSBpZiAuVmFsdWVzLmluZ3Jlc3MudGxzIH19CiAgdGxzOgogIHt7LSByYW5nZSAuVmFsdWVzLmluZ3Jlc3MudGxzIH19CiAgICAtIGhvc3RzOgogICAgICB7ey0gcmFuZ2UgLmhvc3RzIH19CiAgICAgICAgLSB7eyAuIHwgcXVvdGUgfX0KICAgICAge3stIGVuZCB9fQogICAgICBzZWNyZXROYW1lOiB7eyAuc2VjcmV0TmFtZSB9fQogIHt7LSBlbmQgfX0Ke3stIGVuZCB9fQogIHJ1bGVzOgogIHt7LSByYW5nZSAuVmFsdWVzLmluZ3Jlc3MuaG9zdHMgfX0KICAgIC0gaG9zdDoge3sgLiB8IHF1b3RlIH19CiAgICAgIGh0dHA6CiAgICAgICAgcGF0aHM6CiAgICAgICAgICAtIHBhdGg6IHt7ICRpbmdyZXNzUGF0aCB9fQogICAgICAgICAgICBiYWNrZW5kOgogICAgICAgICAgICAgIHNlcnZpY2VOYW1lOiB7eyAkZnVsbE5hbWUgfX0KICAgICAgICAgICAgICBzZXJ2aWNlUG9ydDoge3sgJHNlcnZpY2VQb3J0IH19CiAge3stIGVuZCB9fQp7ey0gZW5kIH19Cg=="
        },
        {
          "name": "networkpolicy.yaml",
          "path": "minio-forked/templates/networkpolicy.yaml",
          "sha": "",
          "size": 719,
          "data": "e3stIGlmIC5WYWx1ZXMubmV0d29ya1BvbGljeS5lbmFibGVkIH19CmtpbmQ6IE5ldHdvcmtQb2xpY3kKYXBpVmVyc2lvbjoge3sgdGVtcGxhdGUgIm1pbmlvLm5ldHdvcmtQb2xpY3kuYXBpVmVyc2lvbiIgLiB9fQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0KICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJtaW5pby5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgIm1pbmlvLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQpzcGVjOgogIHBvZFNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIGFwcDoge3sgdGVtcGxhdGUgIm1pbmlvLm5hbWUiIC4gfX0KICAgICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQogIGluZ3Jlc3M6CiAgICAtIHBvcnRzOgogICAgICAgIC0gcG9ydDoge3sgLlZhbHVlcy5zZXJ2aWNlLnBvcnQgfX0KICAgICAge3stIGlmIG5vdCAuVmFsdWVzLm5ldHdvcmtQb2xpY3kuYWxsb3dFeHRlcm5hbCB9fQogICAgICBmcm9tOgogICAgICAgIC0gcG9kU2VsZWN0b3I6CiAgICAgICAgICAgIG1hdGNoTGFiZWxzOgogICAgICAgICAgICAgIHt7IHRlbXBsYXRlICJtaW5pby5uYW1lIiAuIH19LWNsaWVudDogInRydWUiCiAgICAgIHt7LSBlbmQgfX0Ke3stIGVuZCB9fQo="
        },
        {
          "name": "post-install-create-bucket-job.yaml",
          "path": "minio-forked/templates/post-install-create-bucket-job.yaml",
          "sha": "",
          "size": 1446,
          "data": "e3stIGlmIC5WYWx1ZXMuZGVmYXVsdEJ1Y2tldC5lbmFibGVkIH19CmFwaVZlcnNpb246IGJhdGNoL3YxCmtpbmQ6IEpvYgptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0tbWFrZS1idWNrZXQtam9iCiAgbGFiZWxzOgogICAgYXBwOiB7eyB0ZW1wbGF0ZSAibWluaW8ubmFtZSIgLiB9fQogICAgY2hhcnQ6IHt7IHRlbXBsYXRlICJtaW5pby5jaGFydCIgLiB9fQogICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQogICAgaGVyaXRhZ2U6IHt7IC5SZWxlYXNlLlNlcnZpY2UgfX0KICBhbm5vdGF0aW9uczoKICAgICJoZWxtLnNoL2hvb2siOiBwb3N0LWluc3RhbGwscG9zdC11cGdyYWRlCiAgICAiaGVsbS5zaC9ob29rLWRlbGV0ZS1wb2xpY3kiOiBob29rLXN1Y2NlZWRlZApzcGVjOgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGxhYmVsczoKICAgICAgICBhcHA6IHt7IHRlbXBsYXRlICJtaW5pby5uYW1lIiAuIH19CiAgICAgICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQogICAgc3BlYzoKICAgICAgcmVzdGFydFBvbGljeTogT25GYWlsdXJlCnt7LSBpZiAuVmFsdWVzLm5vZGVTZWxlY3RvciB9fQogICAgICBub2RlU2VsZWN0b3I6Cnt7IHRvWWFtbCAuVmFsdWVzLm5vZGVTZWxlY3RvciB8IGluZGVudCA4IH19Cnt7LSBlbmQgfX0KICAgICAgdm9sdW1lczoKICAgICAgICAtIG5hbWU6IG1pbmlvLWNvbmZpZ3VyYXRpb24KICAgICAgICAgIHByb2plY3RlZDoKICAgICAgICAgICAgc291cmNlczoKICAgICAgICAgICAgLSBjb25maWdNYXA6CiAgICAgICAgICAgICAgICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0KICAgICAgICAgICAgLSBzZWNyZXQ6CiAgICAgICAgICAgICAgICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0KICAgICAgY29udGFpbmVyczoKICAgICAgLSBuYW1lOiBtaW5pby1tYwogICAgICAgIGltYWdlOiAie3sgLlZhbHVlcy5tY0ltYWdlLnJlcG9zaXRvcnkgfX06e3sgLlZhbHVlcy5tY0ltYWdlLnRhZyB9fSIKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IHt7IC5WYWx1ZXMubWNJbWFnZS5wdWxsUG9saWN5IH19CiAgICAgICAgY29tbWFuZDogWyIvYmluL3NoIiwgIi9jb25maWcvaW5pdGlhbGl6ZSJdCiAgICAgICAgZW52OgogICAgICAgICAgLSBuYW1lOiBNSU5JT19FTkRQT0lOVAogICAgICAgICAgICB2YWx1ZToge3sgdGVtcGxhdGUgIm1pbmlvLmZ1bGxuYW1lIiAuIH19CiAgICAgICAgICAtIG5hbWU6IE1JTklPX1BPUlQKICAgICAgICAgICAgdmFsdWU6IHt7IC5WYWx1ZXMuc2VydmljZS5wb3J0IHwgcXVvdGUgfX0KICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgICAtIG5hbWU6IG1pbmlvLWNvbmZpZ3VyYXRpb24KICAgICAgICAgICAgbW91bnRQYXRoOiAvY29uZmlnCnt7LSBlbmQgfX0K"
        },
        {
          "name": "pvc.yaml",
          "path": "minio-forked/templates/pvc.yaml",
          "sha": "",
          "size": 822,
          "data": "e3stIGlmIGVxIC5WYWx1ZXMubW9kZSAic3RhbmRhbG9uZSIgfX0Ke3stIGlmIGFuZCAuVmFsdWVzLnBlcnNpc3RlbmNlLmVuYWJsZWQgKG5vdCAuVmFsdWVzLnBlcnNpc3RlbmNlLmV4aXN0aW5nQ2xhaW0pIH19CmFwaVZlcnNpb246IHYxCmtpbmQ6IFBlcnNpc3RlbnRWb2x1bWVDbGFpbQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0KICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJtaW5pby5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgIm1pbmlvLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQpzcGVjOgp7ey0gaWYgYW5kIC5WYWx1ZXMubmFzZ2F0ZXdheS5lbmFibGVkIC5WYWx1ZXMubmFzZ2F0ZXdheS5wdiB9fQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIHB2OiB7eyAuVmFsdWVzLm5hc2dhdGV3YXkucHYgfCBxdW90ZSB9fQp7ey0gZW5kIH19CiAgYWNjZXNzTW9kZXM6CiAgICAtIHt7IC5WYWx1ZXMucGVyc2lzdGVuY2UuYWNjZXNzTW9kZSB8IHF1b3RlIH19CiAgcmVzb3VyY2VzOgogICAgcmVxdWVzdHM6CiAgICAgIHN0b3JhZ2U6IHt7IC5WYWx1ZXMucGVyc2lzdGVuY2Uuc2l6ZSB8IHF1b3RlIH19Cnt7LSBpZiAuVmFsdWVzLnBlcnNpc3RlbmNlLnN0b3JhZ2VDbGFzcyB9fQogIHN0b3JhZ2VDbGFzc05hbWU6IHt7IC5WYWx1ZXMucGVyc2lzdGVuY2Uuc3RvcmFnZUNsYXNzIHwgcXVvdGUgfX0Ke3stIGVuZCB9fQp7ey0gZW5kIH19Cnt7LSBlbmQgfX0K"
        },
        {
          "name": "secrets.yaml",
          "path": "minio-forked/templates/secrets.yaml",
          "sha": "",
          "size": 509,
          "data": "e3stIGlmIG5vdCAuVmFsdWVzLmV4aXN0aW5nU2VjcmV0IH19CmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlY3JldAptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0KICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJtaW5pby5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgIm1pbmlvLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQp0eXBlOiBPcGFxdWUKZGF0YToKICBhY2Nlc3NrZXk6IHt7IC5WYWx1ZXMuYWNjZXNzS2V5IHwgYjY0ZW5jIH19CiAgc2VjcmV0a2V5OiB7eyAuVmFsdWVzLnNlY3JldEtleSB8IGI2NGVuYyB9fQp7ey0gaWYgLlZhbHVlcy5nY3NnYXRld2F5LmVuYWJsZWQgfX0KICBnY3Nfa2V5Lmpzb246IHt7IC5WYWx1ZXMuZ2NzZ2F0ZXdheS5nY3NLZXlKc29uIHwgYjY0ZW5jIH19Cnt7LSBlbmQgfX0Ke3stIGVuZCB9fQo="
        },
        {
          "name": "service.yaml",
          "path": "minio-forked/templates/service.yaml",
          "sha": "",
          "size": 1347,
          "data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0KICBsYWJlbHM6CiAgICBhcHA6IHt7IHRlbXBsYXRlICJtaW5pby5uYW1lIiAuIH19CiAgICBjaGFydDoge3sgdGVtcGxhdGUgIm1pbmlvLmNoYXJ0IiAuIH19CiAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgICBoZXJpdGFnZToge3sgLlJlbGVhc2UuU2VydmljZSB9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2aWNlLmFubm90YXRpb25zIH19CiAgYW5ub3RhdGlvbnM6Cnt7IHRvWWFtbCAuVmFsdWVzLnNlcnZpY2UuYW5ub3RhdGlvbnMgfCBpbmRlbnQgNCB9fQp7ey0gZW5kIH19CnNwZWM6Cnt7LSBpZiAob3IgKGVxIC5WYWx1ZXMuc2VydmljZS50eXBlICJDbHVzdGVySVAiICIiKSAoZW1wdHkgLlZhbHVlcy5zZXJ2aWNlLnR5cGUpKSB9fQogIHt7LSBpZiBlcSAuVmFsdWVzLm1vZGUgImRpc3RyaWJ1dGVkIiB9fQogIGNsdXN0ZXJJUDogTm9uZQogIHt7LSBlbHNlIH19CiAgdHlwZTogQ2x1c3RlcklQCiAge3stIGVuZCB9fQogIHt7LSBpZiBub3QgKGVtcHR5IC5WYWx1ZXMuc2VydmljZS5jbHVzdGVySVApIH19CiAgY2x1c3RlcklQOiB7eyAuVmFsdWVzLnNlcnZpY2UuY2x1c3RlcklQIH19CiAge3tlbmR9fQp7ey0gZWxzZSBpZiBlcSAuVmFsdWVzLnNlcnZpY2UudHlwZSAiTG9hZEJhbGFuY2VyIiB9fQogIHR5cGU6IHt7IC5WYWx1ZXMuc2VydmljZS50eXBlIH19CiAgbG9hZEJhbGFuY2VySVA6IHt7IGRlZmF1bHQgIiIgLlZhbHVlcy5zZXJ2aWNlLmxvYWRCYWxhbmNlcklQIH19Cnt7LSBlbHNlIH19CiAgdHlwZToge3sgLlZhbHVlcy5zZXJ2aWNlLnR5cGUgfX0Ke3stIGVuZCB9fQogIHBvcnRzOgogICAgLSBuYW1lOiBzZXJ2aWNlCiAgICAgIHBvcnQ6IDkwMDAKICAgICAgdGFyZ2V0UG9ydDoge3sgLlZhbHVlcy5zZXJ2aWNlLnBvcnQgfX0KICAgICAgcHJvdG9jb2w6IFRDUAp7ey0gaWYgKGFuZCAoZXEgLlZhbHVlcy5zZXJ2aWNlLnR5cGUgIk5vZGVQb3J0IikgKCAuVmFsdWVzLnNlcnZpY2Uubm9kZVBvcnQpKSB9fQogICAgICBub2RlUG9ydDoge3sgLlZhbHVlcy5zZXJ2aWNlLm5vZGVQb3J0IH19Cnt7LSBlbmR9fQp7ey0gaWYgLlZhbHVlcy5zZXJ2aWNlLmV4dGVybmFsSVBzIH19CiAgZXh0ZXJuYWxJUHM6Cnt7LSByYW5nZSAkaSAsICRpcCA6PSAuVmFsdWVzLnNlcnZpY2UuZXh0ZXJuYWxJUHMgfX0KICAtIHt7ICRpcCB9fQp7ey0gZW5kIH19Cnt7LSBlbmQgfX0KICBzZWxlY3RvcjoKICAgIGFwcDoge3sgdGVtcGxhdGUgIm1pbmlvLm5hbWUiIC4gfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0K"
        },
        {
          "name": "statefulset.yaml",
          "path": "minio-forked/templates/statefulset.yaml",
          "sha": "",
          "size": 5402,
          "data": "e3stIGlmIGVxIC5WYWx1ZXMubW9kZSAiZGlzdHJpYnV0ZWQiIH19Cnt7ICRub2RlQ291bnQgOj0gLlZhbHVlcy5yZXBsaWNhcyB8IGludCB9fQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IFN0YXRlZnVsU2V0Cm1ldGFkYXRhOgogIG5hbWU6IHt7IHRlbXBsYXRlICJtaW5pby5mdWxsbmFtZSIgLiB9fQogIGxhYmVsczoKICAgIGFwcDoge3sgdGVtcGxhdGUgIm1pbmlvLm5hbWUiIC4gfX0KICAgIGNoYXJ0OiB7eyB0ZW1wbGF0ZSAibWluaW8uY2hhcnQiIC4gfX0KICAgIHJlbGVhc2U6IHt7IC5SZWxlYXNlLk5hbWUgfX0KICAgIGhlcml0YWdlOiB7eyAuUmVsZWFzZS5TZXJ2aWNlIH19CnNwZWM6CiAgdXBkYXRlU3RyYXRlZ3k6CiAgICB0eXBlOiB7eyAuVmFsdWVzLlN0YXRlZnVsU2V0VXBkYXRlLnVwZGF0ZVN0cmF0ZWd5IH19CiAgc2VydmljZU5hbWU6IHt7IHRlbXBsYXRlICJtaW5pby5mdWxsbmFtZSIgLiB9fQogIHJlcGxpY2FzOiB7eyAuVmFsdWVzLnJlcGxpY2FzIH19CiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAgYXBwOiB7eyB0ZW1wbGF0ZSAibWluaW8ubmFtZSIgLiB9fQogICAgICByZWxlYXNlOiB7eyAuUmVsZWFzZS5OYW1lIH19CiAgdGVtcGxhdGU6CiAgICBtZXRhZGF0YToKICAgICAgbmFtZToge3sgdGVtcGxhdGUgIm1pbmlvLmZ1bGxuYW1lIiAuIH19CiAgICAgIGxhYmVsczoKICAgICAgICBhcHA6IHt7IHRlbXBsYXRlICJtaW5pby5uYW1lIiAuIH19CiAgICAgICAgcmVsZWFzZToge3sgLlJlbGVhc2UuTmFtZSB9fQogICAgc3BlYzoKICAgICAge3stIGlmIC5WYWx1ZXMucHJpb3JpdHlDbGFzc05hbWUgfX0KICAgICAgcHJpb3JpdHlDbGFzc05hbWU6ICJ7eyAuVmFsdWVzLnByaW9yaXR5Q2xhc3NOYW1lIH19IgogICAgICB7ey0gZW5kIH19CiAgICAgIGNvbnRhaW5lcnM6CiAgICAgICAgLSBuYW1lOiB7eyAuQ2hhcnQuTmFtZSB9fQogICAgICAgICAgaW1hZ2U6IHt7IC5WYWx1ZXMuaW1hZ2UucmVwb3NpdG9yeSB9fTp7eyAuVmFsdWVzLmltYWdlLnRhZyB9fQogICAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiB7eyAuVmFsdWVzLmltYWdlLnB1bGxQb2xpY3kgfX0KICAgICAgICAgIHt7LSBpZiAuVmFsdWVzLnRscy5lbmFibGVkIH19CiAgICAgICAgICBjb21tYW5kOiBbICIvYmluL3NoIiwgCiAgICAgICAgICAiLWNlIiwgCiAgICAgICAgICAiY3AgL3RtcC9jb25maWcuanNvbiB7eyAuVmFsdWVzLmNvbmZpZ1BhdGggfX0gJiYKICAgICAgICAgIC91c3IvYmluL2RvY2tlci1lbnRyeXBvaW50LnNoIG1pbmlvIC1DIHt7IC5WYWx1ZXMuY29uZmlnUGF0aCB9fSBzZXJ2ZXIKICAgICAgICAgIHt7LSByYW5nZSAkaSA6PSB1bnRpbCAkbm9kZUNvdW50IH19CiAgICAgICAgICBodHRwczovL3t7IHRlbXBsYXRlIGBtaW5pby5mdWxsbmFtZWAgJCB9fS17eyAkaSB9fS57eyB0ZW1wbGF0ZSBgbWluaW8uZnVsbG5hbWVgICQgfX0ue3sgJC5SZWxlYXNlLk5hbWVzcGFjZSB9fS5zdmMuY2x1c3Rlci5sb2NhbHt7ICQuVmFsdWVzLm1vdW50UGF0aCB9fQogICAgICAgICAge3stIGVuZCB9fSIgXQogICAgICAgICAge3sgZWxzZSB9fQogICAgICAgICAgY29tbWFuZDogWyAiL2Jpbi9zaCIsIAogICAgICAgICAgIi1jZSIsIAogICAgICAgICAgImNwIC90bXAvY29uZmlnLmpzb24ge3sgLlZhbHVlcy5jb25maWdQYXRoIH19ICYmCiAgICAgICAgICAvdXNyL2Jpbi9kb2NrZXItZW50cnlwb2ludC5zaCBtaW5pbyAtQyB7eyAuVmFsdWVzLmNvbmZpZ1BhdGggfX0gc2VydmVyCiAgICAgICAgICB7ey0gcmFuZ2UgJGkgOj0gdW50aWwgJG5vZGVDb3VudCB9fQogICAgICAgICAgaHR0cDovL3t7IHRlbXBsYXRlIGBtaW5pby5mdWxsbmFtZWAgJCB9fS17eyAkaSB9fS57eyB0ZW1wbGF0ZSBgbWluaW8uZnVsbG5hbWVgICQgfX0ue3sgJC5SZWxlYXNlLk5hbWVzcGFjZSB9fS5zdmMuY2x1c3Rlci5sb2NhbHt7ICQuVmFsdWVzLm1vdW50UGF0aCB9fQogICAgICAgICAge3stIGVuZCB9fSIgXQogICAgICAgICAge3sgZW5kIH19CiAgICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgICAgIC0gbmFtZTogZXhwb3J0CiAgICAgICAgICAgICAgbW91bnRQYXRoOiB7eyAuVmFsdWVzLm1vdW50UGF0aCB9fQogICAgICAgICAgICAgIHt7LSBpZiBhbmQgLlZhbHVlcy5wZXJzaXN0ZW5jZS5lbmFibGVkIC5WYWx1ZXMucGVyc2lzdGVuY2Uuc3ViUGF0aCB9fQogICAgICAgICAgICAgIHN1YlBhdGg6ICJ7eyAuVmFsdWVzLnBlcnNpc3RlbmNlLnN1YlBhdGggfX0iCiAgICAgICAgICAgICAge3stIGVuZCB9fQogICAgICAgICAgICAtIG5hbWU6IG1pbmlvLXNlcnZlci1jb25maWcKICAgICAgICAgICAgICBtb3VudFBhdGg6ICIvdG1wL2NvbmZpZy5qc29uIgogICAgICAgICAgICAgIHN1YlBhdGg6IGNvbmZpZy5qc29uCiAgICAgICAgICAgIC0gbmFtZTogbWluaW8tY29uZmlnLWRpcgogICAgICAgICAgICAgIG1vdW50UGF0aDoge3sgLlZhbHVlcy5jb25maWdQYXRoIH19CiAgICAgICAgICAgIHt7LSBpZiAuVmFsdWVzLnRscy5lbmFibGVkIH19CiAgICAgICAgICAgIC0gbmFtZTogY2VydC1zZWNyZXQtdm9sdW1lCiAgICAgICAgICAgICAgbW91bnRQYXRoOiB7eyAuVmFsdWVzLmNvbmZpZ1BhdGggfX1jZXJ0cwogICAgICAgICAgICB7eyBlbmQgfX0KICAgICAgICAgIHBvcnRzOgogICAgICAgICAgICAtIG5hbWU6IHNlcnZpY2UKICAgICAgICAgICAgICBjb250YWluZXJQb3J0OiA5MDAwCiAgICAgICAgICBlbnY6CiAgICAgICAgICAgIC0gbmFtZTogTUlOSU9fQUNDRVNTX0tFWQogICAgICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgICAgIHNlY3JldEtleVJlZjoKICAgICAgICAgICAgICAgICAgbmFtZToge3sgaWYgLlZhbHVlcy5leGlzdGluZ1NlY3JldCB9fXt7IC5WYWx1ZXMuZXhpc3RpbmdTZWNyZXQgfX17eyBlbHNlIH19e3sgdGVtcGxhdGUgIm1pbmlvLmZ1bGxuYW1lIiAuIH19e3sgZW5kIH19CiAgICAgICAgICAgICAgICAgIGtleTogYWNjZXNza2V5CiAgICAgICAgICAgIC0gbmFtZTogTUlOSU9fU0VDUkVUX0tFWQogICAgICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgICAgIHNlY3JldEtleVJlZjoKICAgICAgICAgICAgICAgICAgbmFtZToge3sgaWYgLlZhbHVlcy5leGlzdGluZ1NlY3JldCB9fXt7IC5WYWx1ZXMuZXhpc3RpbmdTZWNyZXQgfX17eyBlbHNlIH19e3sgdGVtcGxhdGUgIm1pbmlvLmZ1bGxuYW1lIiAuIH19e3sgZW5kIH19CiAgICAgICAgICAgICAgICAgIGtleTogc2VjcmV0a2V5CiAgICAgICAgICAgIHt7LSByYW5nZSAka2V5LCAkdmFsIDo9IC5WYWx1ZXMuZW52aXJvbm1lbnQgfX0KICAgICAgICAgICAgLSBuYW1lOiB7eyAka2V5IH19CiAgICAgICAgICAgICAgdmFsdWU6IHt7ICR2YWwgfCBxdW90ZSB9fQogICAgICAgICAgICB7ey0gZW5kfX0KICAgICAgICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgICAgICAgIGh0dHBHZXQ6CiAgICAgICAgICAgICAgcGF0aDogL21pbmlvL2hlYWx0aC9saXZlCiAgICAgICAgICAgICAgcG9ydDogc2VydmljZQogICAgICAgICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiB7eyAuVmFsdWVzLmxpdmVuZXNzUHJvYmUuaW5pdGlhbERlbGF5U2Vjb25kcyB9fQogICAgICAgICAgICBwZXJpb2RTZWNvbmRzOiB7eyAuVmFsdWVzLmxpdmVuZXNzUHJvYmUucGVyaW9kU2Vjb25kcyB9fQogICAgICAgICAgICB0aW1lb3V0U2Vjb25kczoge3sgLlZhbHVlcy5saXZlbmVzc1Byb2JlLnRpbWVvdXRTZWNvbmRzIH19CiAgICAgICAgICAgIHN1Y2Nlc3NUaHJlc2hvbGQ6IHt7IC5WYWx1ZXMubGl2ZW5lc3NQcm9iZS5zdWNjZXNzVGhyZXNob2xkIH19CiAgICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IHt7IC5WYWx1ZXMubGl2ZW5lc3NQcm9iZS5mYWlsdXJlVGhyZXNob2xkIH19CiAgICAgICAgICByZXNvdXJjZXM6Cnt7IHRvWWFtbCAuVmFsdWVzLnJlc291cmNlcyB8IGluZGVudCAxMiB9fQogICAge3stIHdpdGggLlZhbHVlcy5ub2RlU2VsZWN0b3IgfX0KICAgICAgbm9kZVNlbGVjdG9yOgp7eyB0b1lhbWwgLiB8IGluZGVudCA4IH19CiAgICB7ey0gZW5kIH19CiAgICB7ey0gd2l0aCAuVmFsdWVzLmFmZmluaXR5IH19CiAgICAgIGFmZmluaXR5Ogp7eyB0b1lhbWwgLiB8IGluZGVudCA4IH19CiAgICB7ey0gZW5kIH19CiAgICB7ey0gd2l0aCAuVmFsdWVzLnRvbGVyYXRpb25zIH19CiAgICAgIHRvbGVyYXRpb25zOgp7eyB0b1lhbWwgLiB8IGluZGVudCA4IH19CiAgICB7ey0gZW5kIH19CiAgICAgIHZvbHVtZXM6CiAgICAgICAgLSBuYW1lOiBtaW5pby11c2VyCiAgICAgICAgICBzZWNyZXQ6CiAgICAgICAgICAgIHNlY3JldE5hbWU6IHt7IGlmIC5WYWx1ZXMuZXhpc3RpbmdTZWNyZXQgfX17eyAuVmFsdWVzLmV4aXN0aW5nU2VjcmV0IH19e3sgZWxzZSB9fXt7IHRlbXBsYXRlICJtaW5pby5mdWxsbmFtZSIgLiB9fXt7IGVuZCB9fQogICAgICAgIC0gbmFtZTogbWluaW8tc2VydmVyLWNvbmZpZwogICAgICAgICAgY29uZmlnTWFwOgogICAgICAgICAgICBuYW1lOiB7eyB0ZW1wbGF0ZSAibWluaW8uZnVsbG5hbWUiIC4gfX0KICAgICAgICAtIG5hbWU6IG1pbmlvLWNvbmZpZy1kaXIKICAgICAgICAgIGVtcHR5RGlyOiB7fQogICAgICAgIHt7LSBpZiAuVmFsdWVzLnRscy5lbmFibGVkIH19CiAgICAgICAgLSBuYW1lOiBjZXJ0LXNlY3JldC12b2x1bWUKICAgICAgICAgIHNlY3JldDoKICAgICAgICAgICAgc2VjcmV0TmFtZToge3sgLlZhbHVlcy50bHMuY2VydFNlY3JldCB9fQogICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgLSBrZXk6IHt7IC5WYWx1ZXMudGxzLnB1YmxpY0NydCB9fQogICAgICAgICAgICAgIHBhdGg6IHB1YmxpYy5jcnQKICAgICAgICAgICAgLSBrZXk6IHt7IC5WYWx1ZXMudGxzLnByaXZhdGVLZXkgfX0KICAgICAgICAgICAgICBwYXRoOiBwcml2YXRlLmtleQogICAgICAgICAgICAtIGtleToge3sgLlZhbHVlcy50bHMucHVibGljQ3J0IH19CiAgICAgICAgICAgICAgcGF0aDogQ0FzL3B1YmxpYy5jcnQKICAgICAgICB7eyBlbmQgfX0KICB2b2x1bWVDbGFpbVRlbXBsYXRlczoKICAgIC0gbWV0YWRhdGE6CiAgICAgICAgbmFtZTogZXhwb3J0CiAgICAgIHNwZWM6CiAgICAgICAgYWNjZXNzTW9kZXM6IFsge3sgLlZhbHVlcy5wZXJzaXN0ZW5jZS5hY2Nlc3NNb2RlIHwgcXVvdGUgfX0gXQogICAgICAgIHt7LSBpZiAuVmFsdWVzLnBlcnNpc3RlbmNlLnN0b3JhZ2VDbGFzcyB9fQogICAgICAgIHN0b3JhZ2VDbGFzc05hbWU6IHt7IC5WYWx1ZXMucGVyc2lzdGVuY2Uuc3RvcmFnZUNsYXNzIH19CiAgICAgICAge3stIGVuZCB9fQogICAgICAgIHJlc291cmNlczoKICAgICAgICAgIHJlcXVlc3RzOgogICAgICAgICAgICBzdG9yYWdlOiB7eyAuVmFsdWVzLnBlcnNpc3RlbmNlLnNpemUgfX0Ke3stIGVuZCB9fQo="
        },
        {
          "name": "values.yaml",
          "path": "minio-forked/values.yaml",
          "sha": "",
          "size": 8309,
          "data": ""
        }
      ]
    },
    {
      "repo": "replicatedhq/test-charts",
      "path": "postgres-forked",
      "ref": "eb834c80b4a381d7c99798935ee386107619b2a1",
      "files": [
        {
          "name": "configmap.yaml",
          "path": "postgres-forked/configmap.yaml",
          "sha": "",
          "size": 537,
          "data": "IyBTb3VyY2U6IHBvc3RncmVzcWwvdGVtcGxhdGVzL2luaXRpYWxpemF0aW9uLWNvbmZpZ21hcC55YW1sCmFwaVZlcnNpb246IHYxCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiBwb3N0Z3Jlcy1wb3N0Z3Jlc3FsLWluaXQtc2NyaXB0cwogIGxhYmVsczoKICAgIGFwcDogcG9zdGdyZXNxbAogICAgY2hhcnQ6IHBvc3RncmVzcWwtMi42LjYKICAgIHJlbGVhc2U6ICJwb3N0Z3JlcyIKICAgIGhlcml0YWdlOiAiVGlsbGVyIgpkYXRhOgogIFJFQURNRS5tZDogfC0KICAgIFlvdSBjYW4gY29weSBoZXJlIHlvdXIgY3VzdG9tIGAuc2hgLCBgLnNxbGAgb3IgYC5zcWwuZ3pgIGZpbGUgc28gdGhleSBhcmUgZXhlY3V0ZWQgZHVyaW5nIHRoZSBmaXJzdCBib290IG9mIHRoZSBpbWFnZS4KCiAgICBNb3JlIGluZm8gaW4gdGhlIFtiaXRuYW1pLWRvY2tlci1wb3N0Z3Jlc3FsXShodHRwczovL2dpdGh1Yi5jb20vYml0bmFtaS9iaXRuYW1pLWRvY2tlci1wb3N0Z3Jlc3FsI2luaXRpYWxpemluZy1hLW5ldy1pbnN0YW5jZSkgcmVwb3NpdG9yeS4K"
        },
        {
          "name": "secret.yaml",
          "path": "postgres-forked/secret.yaml",
          "sha": "",
          "size": 231,
          "data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IHBvc3RncmVzLXBvc3RncmVzcWwKICBsYWJlbHM6CiAgICBhcHA6IHBvc3RncmVzcWwKICAgIGNoYXJ0OiBwb3N0Z3Jlc3FsLTIuNi42CiAgICByZWxlYXNlOiAicG9zdGdyZXMiCiAgICBoZXJpdGFnZTogIlRpbGxlciIKdHlwZTogT3BhcXVlCmRhdGE6CiAgcG9zdGdyZXNxbC1wYXNzd29yZDogIkZPUktFRF9QQVNTV09SRCIK"
        },
        {
          "name": "service.yaml",
          "path": "postgres-forked/service.yaml",
          "sha": "",
          "size": 787,
          "data": "IyBTb3VyY2U6IHBvc3RncmVzcWwvdGVtcGxhdGVzL3N2Yy1oZWFkbGVzcy55YW1sCmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2UKbWV0YWRhdGE6CiAgbmFtZTogcG9zdGdyZXMtcG9zdGdyZXNxbC1oZWFkbGVzcwogIGxhYmVsczoKICAgIGFwcDogcG9zdGdyZXNxbAogICAgY2hhcnQ6IHBvc3RncmVzcWwtMi42LjYKICAgIHJlbGVhc2U6ICJwb3N0Z3JlcyIKICAgIGhlcml0YWdlOiAiVGlsbGVyIgpzcGVjOgogIHR5cGU6IENsdXN0ZXJJUAogIGNsdXN0ZXJJUDogTm9uZQogIHBvcnRzOgogIC0gbmFtZTogcG9zdGdyZXNxbAogICAgcG9ydDogNTQzMgogICAgdGFyZ2V0UG9ydDogcG9zdGdyZXNxbAogIHNlbGVjdG9yOgogICAgYXBwOiBwb3N0Z3Jlc3FsCiAgICByZWxlYXNlOiAicG9zdGdyZXMiCgotLS0KIyBTb3VyY2U6IHBvc3RncmVzcWwvdGVtcGxhdGVzL3N2Yy55YW1sCmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2UKbWV0YWRhdGE6CiAgbmFtZTogcG9zdGdyZXMtcG9zdGdyZXNxbAogIGxhYmVsczoKICAgIGFwcDogcG9zdGdyZXNxbAogICAgY2hhcnQ6IHBvc3RncmVzcWwtMi42LjYKICAgIHJlbGVhc2U6ICJwb3N0Z3JlcyIKICAgIGhlcml0YWdlOiAiVGlsbGVyIgpzcGVjOgogIHR5cGU6IENsdXN0ZXJJUAogIHBvcnRzOgogIC0gbmFtZTogcG9zdGdyZXNxbAogICAgcG9ydDogIDU0MzIKICAgIHRhcmdldFBvcnQ6IHBvc3RncmVzcWwKICBzZWxlY3RvcjoKICAgIGFwcDogcG9zdGdyZXNxbAogICAgcmVsZWFzZTogInBvc3RncmVzIgogICAgcm9sZTogbWFzdGVyCg=="
        },
        {
          "name": "statefulset-primary.yaml",
          "path": "postgres-forked/statefulset-primary.yaml",
          "sha": "",
          "size": 3572,
          "data": "IyBTb3VyY2U6IHBvc3RncmVzcWwvdGVtcGxhdGVzL3N0YXRlZnVsc2V0LnlhbWwKYXBpVmVyc2lvbjogYXBwcy92MWJldGEyCmtpbmQ6IFN0YXRlZnVsU2V0Cm1ldGFkYXRhOgogIG5hbWU6IHBvc3RncmVzLXBvc3RncmVzcWwtbWFzdGVyCiAgbGFiZWxzOgogICAgYXBwOiBwb3N0Z3Jlc3FsCiAgICBjaGFydDogcG9zdGdyZXNxbC0yLjYuNgogICAgcmVsZWFzZTogInBvc3RncmVzIgogICAgaGVyaXRhZ2U6ICJUaWxsZXIiCnNwZWM6CiAgc2VydmljZU5hbWU6IHBvc3RncmVzLXBvc3RncmVzcWwtaGVhZGxlc3MKICByZXBsaWNhczogMQogIHVwZGF0ZVN0cmF0ZWd5OgogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIGFwcDogcG9zdGdyZXNxbAogICAgICByZWxlYXNlOiAicG9zdGdyZXMiCiAgICAgIHJvbGU6IG1hc3RlcgogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIG5hbWU6IHBvc3RncmVzLXBvc3RncmVzcWwKICAgICAgbGFiZWxzOgogICAgICAgIGFwcDogcG9zdGdyZXNxbAogICAgICAgIGNoYXJ0OiBwb3N0Z3Jlc3FsLTIuNi42CiAgICAgICAgcmVsZWFzZTogInBvc3RncmVzIgogICAgICAgIGhlcml0YWdlOiAiVGlsbGVyIgogICAgICAgIHJvbGU6IG1hc3RlcgogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogcmVhZC1vci13cml0ZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEluCiAgICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgICAtIHdyaXRlCiAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICBmc0dyb3VwOiAxMDAxCiAgICAgICAgcnVuQXNVc2VyOiAxMDAxCiAgICAgIGluaXRDb250YWluZXJzOgogICAgICAtIG5hbWU6IGluaXQtY2htb2QtZGF0YQogICAgICAgIGltYWdlOiBkb2NrZXIuaW8vYml0bmFtaS9taW5pZGViOmxhdGVzdAogICAgICAgIGltYWdlUHVsbFBvbGljeTogIkFsd2F5cyIKICAgICAgICBjb21tYW5kOgogICAgICAgICAgLSBzaAogICAgICAgICAgLSAtYwogICAgICAgICAgLSB8CiAgICAgICAgICAgIGNob3duIC1SIDEwMDE6MTAwMSAvYml0bmFtaQogICAgICAgICAgICBpZiBbIC1kIC9iaXRuYW1pL3Bvc3RncmVzcWwvZGF0YSBdOyB0aGVuCiAgICAgICAgICAgICAgY2htb2QgIDA3MDAgL2JpdG5hbWkvcG9zdGdyZXNxbC9kYXRhOwogICAgICAgICAgICBmaQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIHJ1bkFzVXNlcjogMAogICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAtIG5hbWU6IGRhdGEKICAgICAgICAgIG1vdW50UGF0aDogL2JpdG5hbWkvcG9zdGdyZXNxbAoKICAgICAgY29udGFpbmVyczoKICAgICAgLSBuYW1lOiBwb3N0Z3Jlcy1wb3N0Z3Jlc3FsCiAgICAgICAgaW1hZ2U6IGRvY2tlci5pby9iaXRuYW1pL3Bvc3RncmVzcWw6MTAuNi4wCiAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiAiQWx3YXlzIgogICAgICAgIHJlc291cmNlczoKICAgICAgICAgIHJlcXVlc3RzOgogICAgICAgICAgICBjcHU6IDI1MG0KICAgICAgICAgICAgbWVtb3J5OiAyNTZNaQoKICAgICAgICBlbnY6CiAgICAgICAgLSBuYW1lOiBQT1NUR1JFU1FMX1JFUExJQ0FUSU9OX01PREUKICAgICAgICAgIHZhbHVlOiAibWFzdGVyIgogICAgICAgIC0gbmFtZTogUE9TVEdSRVNRTF9SRVBMSUNBVElPTl9VU0VSCiAgICAgICAgICB2YWx1ZTogInJlcGxfdXNlciIKICAgICAgICAtIG5hbWU6IFBPU1RHUkVTUUxfUkVQTElDQVRJT05fUEFTU1dPUkQKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgc2VjcmV0S2V5UmVmOgogICAgICAgICAgICAgIG5hbWU6IHBvc3RncmVzLXBvc3RncmVzcWwKICAgICAgICAgICAgICBrZXk6IHBvc3RncmVzcWwtcmVwbGljYXRpb24tcGFzc3dvcmQKICAgICAgICAtIG5hbWU6IFBPU1RHUkVTUUxfVVNFUk5BTUUKICAgICAgICAgIHZhbHVlOiAicG9zdGdyZXMiCiAgICAgICAgLSBuYW1lOiBQT1NUR1JFU1FMX1BBU1NXT1JECiAgICAgICAgICB2YWx1ZUZyb206CiAgICAgICAgICAgIHNlY3JldEtleVJlZjoKICAgICAgICAgICAgICBuYW1lOiBwb3N0Z3Jlcy1wb3N0Z3Jlc3FsCiAgICAgICAgICAgICAga2V5OiBwb3N0Z3Jlc3FsLXBhc3N3b3JkCiAgICAgICAgLSBuYW1lOiBQT1NUR1JFU1FMX0RBVEFCQVNFCiAgICAgICAgICB2YWx1ZTogc2hpcAogICAgICAgIC0gbmFtZTogUE9EX0lQCiAgICAgICAgICB2YWx1ZUZyb206IHsgZmllbGRSZWY6IHsgZmllbGRQYXRoOiBzdGF0dXMucG9kSVAgfSB9CiAgICAgICAgcG9ydHM6CiAgICAgICAgLSBuYW1lOiBwb3N0Z3Jlc3FsCiAgICAgICAgICBjb250YWluZXJQb3J0OiA1NDMyCiAgICAgICAgbGl2ZW5lc3NQcm9iZToKICAgICAgICAgIGV4ZWM6CiAgICAgICAgICAgIGNvbW1hbmQ6CiAgICAgICAgICAgIC0gc2gKICAgICAgICAgICAgLSAtYwogICAgICAgICAgICAtIGV4ZWMgcGdfaXNyZWFkeSAtVSAicG9zdGdyZXMiIC0taG9zdCAkUE9EX0lQCiAgICAgICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiAzMAogICAgICAgICAgcGVyaW9kU2Vjb25kczogMTAKICAgICAgICAgIHRpbWVvdXRTZWNvbmRzOiA1CiAgICAgICAgICBzdWNjZXNzVGhyZXNob2xkOiAxCiAgICAgICAgICBmYWlsdXJlVGhyZXNob2xkOiA2CiAgICAgICAgcmVhZGluZXNzUHJvYmU6CiAgICAgICAgICBleGVjOgogICAgICAgICAgICBjb21tYW5kOgogICAgICAgICAgICAtIHNoCiAgICAgICAgICAgIC0gLWMKICAgICAgICAgICAgLSBleGVjIHBnX2lzcmVhZHkgLVUgInBvc3RncmVzIiAtLWhvc3QgJFBPRF9JUAogICAgICAgICAgaW5pdGlhbERlbGF5U2Vjb25kczogNQogICAgICAgICAgcGVyaW9kU2Vjb25kczogMTAKICAgICAgICAgIHRpbWVvdXRTZWNvbmRzOiA1CiAgICAgICAgICBzdWNjZXNzVGhyZXNob2xkOiAxCiAgICAgICAgICBmYWlsdXJlVGhyZXNob2xkOiA2CiAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgIC0gbmFtZTogY3VzdG9tLWluaXQtc2NyaXB0cwogICAgICAgICAgbW91bnRQYXRoOiAvZG9ja2VyLWVudHJ5cG9pbnQtaW5pdGRiLmQKICAgICAgICAtIG5hbWU6IGRhdGEKICAgICAgICAgIG1vdW50UGF0aDogL2JpdG5hbWkvcG9zdGdyZXNxbAogICAgICB2b2x1bWVzOgogICAgICAtIG5hbWU6IGN1c3RvbS1pbml0LXNjcmlwdHMKICAgICAgICBjb25maWdNYXA6CiAgICAgICAgICBuYW1lOiBwb3N0Z3Jlcy1wb3N0Z3Jlc3FsLWluaXQtc2NyaXB0cwogIHZvbHVtZUNsYWltVGVtcGxhdGVzOgogICAgLSBtZXRhZGF0YToKICAgICAgICBuYW1lOiBkYXRhCiAgICAgIHNwZWM6CiAgICAgICAgYWNjZXNzTW9kZXM6CiAgICAgICAgICAtICJSZWFkV3JpdGVPbmNlIgogICAgICAgIHJlc291cmNlczoKICAgICAgICAgIHJlcXVlc3RzOgogICAgICAgICAgICBzdG9yYWdlOiAiOEdpIgo="
        },
        {
          "name": "statefulset-replica.yaml",
          "path": "postgres-forked/statefulset-replica.yaml",
          "sha": "",
          "size": 3255,
          "data": "IyBTb3VyY2U6IHBvc3RncmVzcWwvdGVtcGxhdGVzL3N0YXRlZnVsc2V0LXNsYXZlcy55YW1sCgphcGlWZXJzaW9uOiBhcHBzL3YxYmV0YTIKa2luZDogU3RhdGVmdWxTZXQKbWV0YWRhdGE6CiAgbmFtZTogInBvc3RncmVzLXBvc3RncmVzcWwtc2xhdmUiCiAgbGFiZWxzOgogICAgYXBwOiBwb3N0Z3Jlc3FsCiAgICBjaGFydDogcG9zdGdyZXNxbC0yLjYuNgogICAgcmVsZWFzZTogInBvc3RncmVzIgogICAgaGVyaXRhZ2U6ICJUaWxsZXIiCnNwZWM6CiAgc2VydmljZU5hbWU6IHBvc3RncmVzLXBvc3RncmVzcWwtaGVhZGxlc3MKICByZXBsaWNhczogMQogIHVwZGF0ZVN0cmF0ZWd5OgogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIGFwcDogcG9zdGdyZXNxbAogICAgICByZWxlYXNlOiAicG9zdGdyZXMiCiAgICAgIHJvbGU6IHNsYXZlCiAgdGVtcGxhdGU6CiAgICBtZXRhZGF0YToKICAgICAgbmFtZTogcG9zdGdyZXMtcG9zdGdyZXNxbAogICAgICBsYWJlbHM6CiAgICAgICAgYXBwOiBwb3N0Z3Jlc3FsCiAgICAgICAgY2hhcnQ6IHBvc3RncmVzcWwtMi42LjYKICAgICAgICByZWxlYXNlOiAicG9zdGdyZXMiCiAgICAgICAgaGVyaXRhZ2U6ICJUaWxsZXIiCiAgICAgICAgcm9sZTogc2xhdmUKICAgIHNwZWM6CiAgICAgIGFmZmluaXR5OgogICAgICAgIG5vZGVBZmZpbml0eToKICAgICAgICAgIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb246CiAgICAgICAgICAgIG5vZGVTZWxlY3RvclRlcm1zOgogICAgICAgICAgICAtIG1hdGNoRXhwcmVzc2lvbnM6CiAgICAgICAgICAgICAgLSBrZXk6IHJlYWQtb3Itd3JpdGUKICAgICAgICAgICAgICAgIG9wZXJhdG9yOiBJbgogICAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgICAgLSByZWFkCiAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICBmc0dyb3VwOiAxMDAxCiAgICAgICAgcnVuQXNVc2VyOiAxMDAxCiAgICAgIGluaXRDb250YWluZXJzOgogICAgICAtIG5hbWU6IGluaXQtY2htb2QtZGF0YQogICAgICAgIGltYWdlOiBkb2NrZXIuaW8vYml0bmFtaS9taW5pZGViOmxhdGVzdAogICAgICAgIGltYWdlUHVsbFBvbGljeTogIkFsd2F5cyIKICAgICAgICBjb21tYW5kOgogICAgICAgICAgLSBzaAogICAgICAgICAgLSAtYwogICAgICAgICAgLSB8CiAgICAgICAgICAgIGNob3duIC1SIDEwMDE6MTAwMSAvYml0bmFtaQogICAgICAgICAgICBpZiBbIC1kIC9iaXRuYW1pL3Bvc3RncmVzcWwvZGF0YSBdOyB0aGVuCiAgICAgICAgICAgICAgY2htb2QgIDA3MDAgL2JpdG5hbWkvcG9zdGdyZXNxbC9kYXRhOwogICAgICAgICAgICBmaQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIHJ1bkFzVXNlcjogMAogICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAtIG5hbWU6IGRhdGEKICAgICAgICAgIG1vdW50UGF0aDogL2JpdG5hbWkvcG9zdGdyZXNxbAoKICAgICAgY29udGFpbmVyczoKICAgICAgLSBuYW1lOiBwb3N0Z3Jlcy1wb3N0Z3Jlc3FsCiAgICAgICAgaW1hZ2U6IGRvY2tlci5pby9iaXRuYW1pL3Bvc3RncmVzcWw6MTAuNi4wCiAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiAiQWx3YXlzIgogICAgICAgIHJlc291cmNlczoKICAgICAgICAgIHJlcXVlc3RzOgogICAgICAgICAgICBjcHU6IDI1MG0KICAgICAgICAgICAgbWVtb3J5OiAyNTZNaQoKICAgICAgICBlbnY6CiAgICAgICAgLSBuYW1lOiBQT1NUR1JFU1FMX1JFUExJQ0FUSU9OX01PREUKICAgICAgICAgIHZhbHVlOiAic2xhdmUiCiAgICAgICAgLSBuYW1lOiBQT1NUR1JFU1FMX1JFUExJQ0FUSU9OX1VTRVIKICAgICAgICAgIHZhbHVlOiAicmVwbF91c2VyIgogICAgICAgIC0gbmFtZTogUE9TVEdSRVNRTF9SRVBMSUNBVElPTl9QQVNTV09SRAogICAgICAgICAgdmFsdWVGcm9tOgogICAgICAgICAgICBzZWNyZXRLZXlSZWY6CiAgICAgICAgICAgICAgbmFtZTogcG9zdGdyZXMtcG9zdGdyZXNxbAogICAgICAgICAgICAgIGtleTogcG9zdGdyZXNxbC1yZXBsaWNhdGlvbi1wYXNzd29yZAogICAgICAgIC0gbmFtZTogUE9TVEdSRVNRTF9NQVNURVJfSE9TVAogICAgICAgICAgdmFsdWU6IHBvc3RncmVzLXBvc3RncmVzcWwKICAgICAgICAtIG5hbWU6IFBPU1RHUkVTUUxfTUFTVEVSX1BPUlRfTlVNQkVSCiAgICAgICAgICB2YWx1ZTogIjU0MzIiCiAgICAgICAgLSBuYW1lOiBQT0RfSVAKICAgICAgICAgIHZhbHVlRnJvbTogeyBmaWVsZFJlZjogeyBmaWVsZFBhdGg6IHN0YXR1cy5wb2RJUCB9IH0KICAgICAgICBwb3J0czoKICAgICAgICAtIG5hbWU6IHBvc3RncmVzcWwKICAgICAgICAgIGNvbnRhaW5lclBvcnQ6IDU0MzIKICAgICAgICBsaXZlbmVzc1Byb2JlOgogICAgICAgICAgZXhlYzoKICAgICAgICAgICAgY29tbWFuZDoKICAgICAgICAgICAgLSBzaAogICAgICAgICAgICAtIC1jCiAgICAgICAgICAgIC0gZXhlYyBwZ19pc3JlYWR5IC1VICJwb3N0Z3JlcyIgLS1ob3N0ICRQT0RfSVAKICAgICAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDMwCiAgICAgICAgICBwZXJpb2RTZWNvbmRzOiAxMAogICAgICAgICAgdGltZW91dFNlY29uZHM6IDUKICAgICAgICAgIHN1Y2Nlc3NUaHJlc2hvbGQ6IDEKICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IDYKICAgICAgICByZWFkaW5lc3NQcm9iZToKICAgICAgICAgIGV4ZWM6CiAgICAgICAgICAgIGNvbW1hbmQ6CiAgICAgICAgICAgIC0gc2gKICAgICAgICAgICAgLSAtYwogICAgICAgICAgICAtIGV4ZWMgcGdfaXNyZWFkeSAtVSAicG9zdGdyZXMiIC0taG9zdCAkUE9EX0lQCiAgICAgICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiA1CiAgICAgICAgICBwZXJpb2RTZWNvbmRzOiAxMAogICAgICAgICAgdGltZW91dFNlY29uZHM6IDUKICAgICAgICAgIHN1Y2Nlc3NUaHJlc2hvbGQ6IDEKICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IDYKICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgLSBuYW1lOiBkYXRhCiAgICAgICAgICBtb3VudFBhdGg6IC9iaXRuYW1pL3Bvc3RncmVzcWwKICAgICAgdm9sdW1lczogW10KICB2b2x1bWVDbGFpbVRlbXBsYXRlczoKICAgIC0gbWV0YWRhdGE6CiAgICAgICAgbmFtZTogZGF0YQogICAgICBzcGVjOgogICAgICAgIGFjY2Vzc01vZGVzOgogICAgICAgICAgLSAiUmVhZFdyaXRlT25jZSIKICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgc3RvcmFnZTogIjhHaSIK"
        }
      ]
    }
  ],
  "created": "2018-12-12T22:03:17.000Z",
  "entitlements": {
    "meta": {
      "last_updated": "0001-01-01T00:00:00Z",
      "customer_id": ""
    },
    "signature": ""
  }
}